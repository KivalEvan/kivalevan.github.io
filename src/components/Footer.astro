---
import contact from '../data/contact.js';

const date = new Date();
const monthName = [
   'January',
   'February',
   'March',
   'April',
   'May',
   'June',
   'July',
   'August',
   'September',
   'October',
   'November',
   'December',
];
const lastUpdated = `${date.getUTCDate()} ${monthName[date.getMonth()]} ${date.getFullYear()}`;
---

<footer>
   <div class="wrapper readable container flex">
      <div class="flex-item">
         {
            contact.map((c) =>
               c.url ? (
                  <a class="link-padding svg" href={c.url} title={c.place}>
                     {c.img ? <Fragment set:html={c.img} /> : c.place}
                  </a>
               ) : (
                  <span
                     class={
                        c.place === 'Discord'
                           ? 'discord-popup fake-link link-padding'
                           : 'fake-link link-padding'
                     }
                     id={`${c.place}-link`}
                     title={c.name}
                     tabindex="0"
                  >
                     {c.img ? <Fragment class="svg" set:html={c.img} /> : c.place}
                  </span>
               )
            )
         }
      </div>
      <div class="flex-item2">
         <a class="ko-fi" href="https://ko-fi.com/I3I620UNJ" rel="noopener" target="_blank">
            <img
               loading="lazy"
               src="https://cdn.ko-fi.com/cdn/kofi3.png?v=2"
               alt="Buy Me a Coffee at ko-fi.com"
            />
         </a>
      </div>
   </div>
   <time datetime={date.toISOString()}>Last Updated: {lastUpdated}</time>
</footer>

<script>
   document.querySelectorAll('.discord-popup').forEach((el) => {
      el.addEventListener('click', () => {
         alert(
            'DM on Discord: @kivalevan\nPlease be on Beat Saber Modding Group server so I know where you are coming from, I ignore request with no mutual server.'
         );
      });
   });
</script>

<style lang="scss">
   footer {
      position: relative;
      background-color: #0008;
   }

   a,
   span {
      width: 2em;
      height: 2em;
      fill: #aaa;
      transition:
         filter 0.2s ease,
         transform 0.5s ease;
      &:hover {
         filter: brightness(1.5);
         transform: scale(1.5, 1.5);
      }
   }

   .container {
      font-size: 1.25em;
      padding-top: 1em;
      padding-bottom: 1.5em;
      overflow: hidden;
   }

   .flex {
      display: flex;
      flex-direction: row;

      &-item {
         display: flex;
         width: calc(100% / 1.5);
         justify-content: space-evenly;
         align-items: center;
         flex-wrap: wrap;
      }

      &-item2 {
         display: flex;
         width: calc(100% / 3);
      }
   }

   time {
      position: absolute;
      bottom: 0.5em;
      right: 0.5em;
      font-size: 0.75rem;
   }

   .link-padding {
      padding-left: 0.125em;
      padding-right: 0.125em;
   }

   .ko-fi {
      width: min(100%, 160px);
      margin: auto;
      line-height: 0;

      img {
         width: 100%;
         transition:
            filter 0.2s ease,
            transform 0.5s ease;
         margin: auto;
      }

      &:hover img {
         filter: brightness(0.8) contrast(150%);
         transform: scale(0.8, 0.8);
      }
   }
</style>
